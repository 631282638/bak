<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
            http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
            http://www.springframework.org/schema/mvc  
            http://www.springframework.org/schema/mvc/spring-mvc.xsd  
            http://www.springframework.org/schema/context  
            http://www.springframework.org/schema/context/spring-context.xsd"  
    default-lazy-init="true">      
    <!-- 通过mvc:resources设置静态资源，这样servlet就会处理这些静态资源，而不通过控制器 -->  
    <!-- 设置不过滤内容，比如:css,jquery,img 等资源文件 -->  
     <mvc:resources location="/*.html" mapping="/**.html" />  
    <mvc:resources location="/css/*" mapping="/css/**" />  
    <mvc:resources location="/js/*" mapping="/js/**" />  
    <mvc:resources location="/images/*" mapping="/images/**" />   
      
   <!-- 添加注解驱动 -->  
    <mvc:annotation-driven />  
    <!-- 默认扫描的包路径 -->  
    <context:component-scan base-package="com.shuixiaofei.controller" />  
    <mvc:interceptors>  
        <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->  
        <bean class="com.shuixiaofei.interceptor.AuthInterceptor"/>  
        <mvc:interceptor>  
            <mvc:mapping path="/*.do"/>  
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->  
            <bean class="com.shuixiaofei.interceptor.AuthInterceptor"/>  
        </mvc:interceptor>  
    </mvc:interceptors>  
    <!--返回json  -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
    	<!-- 配置多文件上传 -->
    
   	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<!-- 上传文件大小限制为50M，50*1024*1024 -->
			<value>52428800</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	
	<!--  <bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">  
        每个页面都引用  
        <property name="exposeRequestAttributes" value="true" />  
        页面类型  
        <property name="contentType" value="text/html;charset=UTF-8" />  
        前缀  
        <property name="prefix" value="" />  
        后缀  
        <property name="suffix" value=".html" />  
        每个页面都引用  
        <property name="layoutUrl" value="layout.html" />  
        当前项目域名(IP)加端口号,html页面引用${rc.contextPath}  
        <property name="requestContextAttribute" value="rc" />  
        第一个匹配的是freemarker的视图解析器，如果匹配不成功，则自动选择order=1的其他解析器  
        <property name="order" value="0" />  
    </bean>  
    
	<bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">  
        <property name="resourceLoaderPath">  
            <value>WEB-INF/pages</value>  
        </property>  
        <property name="velocityProperties">  
            <props>  
                <prop key="input.encoding">UTF-8</prop>  
                <prop key="output.encoding">UTF-8</prop>  
                <prop key="contentType">text/html;charset=UTF-8</prop>  
            </props>  
        </property>  
    </bean>  -->
	<!-- mvc:view-controller可以在不需要Controller处理request的情况，转向到设置的View -->  
    <!-- 像下面这样设置，如果请求为/，则不通过controller，而直接解析为/index.jsp -->  
    <mvc:view-controller path="/" view-name="index" />  
    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">  
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>  
        <!-- 配置jsp路径前缀 -->  
        <property name="prefix" value="/WEB-INF/"></property>  
        <!-- 配置URl后缀 -->  
        <property name="suffix" value=".jsp"></property>  
    </bean>  
      
</beans>  